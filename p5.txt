 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
    #954
 ** ¿Cuánto tiempo dura la captura?
    #56.149345
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    192.168.1.34 -- de 192.168.0.0-192.168.255.255 estan reservadas a privadas


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
    96.23%(UDP) y 2.10% (TCP) // 
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
    DNS,RTP,Classic-STUN,H.261,RTCP,SIP

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
    7.34-7.425-7.427-7.50-7.55-7.64-14.42-14.59-14.61-16.23-16.33-16.34-16.45-38.11-38.36-38.362
    38093-39.15-39.17-39.20-39.22-55.69-55.774-55.776-55.85
    EN TOTAL : 25 CAPTURAS SIP
 ** Y los paquetes con RTP, ¿cuándo se envían?
    Empiezan en el segundo 17 y acaban en el 38.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
    1	0.000000	192.168.1.34	80.58.61.250	DNS	69	Standard query 0xf0f7  A ekiga.net
    2	0.044785	80.58.61.250	192.168.1.34	DNS	85	Standard query response 0xf0f7  A 86.64.162.35
    3	0.045329	192.168.1.34	80.58.61.250	DNS	85	Standard query 0x32c3  PTR 35.162.64.86.in-addr.arpa
    4	0.121230	80.58.61.250	192.168.1.34	DNS	142	Standard query response 0x32c3 No such name
    DNS
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
    80.58.61.250
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    86.64.162.35
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
    Para realizar el DNS inverso. Es la misma direccion del servicio de nombres al revés.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
    Full request URI: http://ekiga.net/ip/
 ** ¿Qué user agent (UA) la está pidiendo?
    EKIGA
 ** ¿Qué devuelve el servidor?
    Line-based text data: text/html
    83.36.48.212
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
    IP = 193.147.77.70 


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
    Buscamos la direccion publica de los clientes NAT.
 ** ¿Estamos tras un NAT?
        ---DUDA---

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
    86.64.162.35
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
    User Datagram Protocol, Src Port: 5063 (5063), Dst Port: sip (5060)
 ** ¿Qué método SIP utiliza el UA para registrarse?
    Method: REGISTER
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
    Allow: INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
    No
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Aqui no se realiza correctamente:
    50	7.425202	86.64.162.35	192.168.1.34	SIP	714	Status: 401 Unauthorized    (0 bindings) | 
    Aqui si se realiza correctamente:
    54	7.512211	86.64.162.35	192.168.1.34	SIP	664	Status: 200 OK    (1 bindings) | 
    
    En el primer intento no lo consigue porque tienen que realizar el proceso de Auteticacion en SIP
    a través del desafío Digest.

 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)

    Lenght = 1ºintento 468  / 2ºintento 678 

    En el primer intento no viene incluido el proceso de Autenticacion en el segundo intento si:

    Authentication Scheme: Digest
    Digest username="grex", 
    realm="ekiga.net", 
    nonce="45a439ee7438aaea43ae8c7c2382922187f86c8b",
    uri="sip:ekiga.net", 
    algorithm=md5,
    response="5267d4e49d707d4443baefa913e8ff90"
    Nonce Value: "45a439ee7438aaea43ae8c7c2382922187f86c8b"

    Eso provocca que el tamaño del mensaje sea mayor en el segundo intento

 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    3600s

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
    From: "Gregorio Robles" <sip:grex@ekiga.net>;tag=621be956-b29e-db11-82ee-0013ce8c7c2b
    SIP from address User Part: grex
    --> SIP from address: sip:grex@ekiga.net

 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    
    SDP La descripcion del mensaje SDP
    
    v=0
    o=- 1168390274 1168390274 IN IP4 83.36.48.212
    s=Opal SIP Session
    c=IN IP4 83.36.48.212
    t=0 0
    m=audio 5002 RTP/AVP 101 96 3 107 110 0 8
    a=rtpmap:101 telephone-event/8000
    a=fmtp:101 0-15
    a=rtpmap:96 SPEEX/16000
    a=rtpmap:3 GSM/8000
    a=rtpmap:107 MS-GSM/8000
    a=rtpmap:110 SPEEX/8000
    a=rtpmap:0 PCMU/8000
    a=rtpmap:8 PCMA/8000
    m=video 5006 RTP/AVP 31
    a=rtpmap:31 H261/90000




 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes? 
    No 407 Proxy Authentication Required 
    Como en la previa comunicacion del REGISTER de SIP, tiene un proceso de autenticacion de por medio
    antes de poner realizar la accion completa. Utilizan Digest.
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    El segundo INVITE ya viene con la resolucion del Digest entre usuario y servidor. 

        ---DUDA--
11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    RTP
 ** ¿Cuál es el tamaño de paquete de los mismos?
    214 bytes
 ** ¿Se utilizan bits de padding?
    0   
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
    Aproximadamente caca 0.0204 segundos.
 ** ¿Cuántos bits/segundo estamos enviando?
    1712 cada 0.0204 segundos
    


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.

    Max delta = 1290,48 ms at packet no. 300 
    Max jitter = 183,10 ms. Mean jitter = 153,24 ms.
    Max skew = -17069,40 ms.
    Total RTP packets = 196   (expected 196)   Lost RTP packets = 0 (0,00%)   Sequence errors = 0 
    Duration 20,95 s (-16928 ms clock drift, corresponding to 17276 Hz (-80,80%)

 ** ¿Cuántos flujos hay? ¿por qué?
    196 paquetes RTP
 ** ¿Cuántos paquetes se pierden? 
    0.00%
 ** ¿Cuál es el valor máximo del delta? 
    1290.48 ms
    ¿Y qué es lo que significa el valor de delta?
    Delta es la diferencia entre la llegada de este paquete y la llegada del paquete anterior.
    Refleja la llegada de paquetes en la interfaz de captura (donde se ha marcado el tiempo).
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
    El jitter es la variabilidad temporal durante el envío de señales digitales, es decir la diferencia del tiempo
    de trasmision entre envío. 
    Parece que el tiempo medio entre envio de los paquetes es de 153.24 ms 

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.

    He escogido este paquete:
    
    436	25.042315	192.168.1.34	86.64.162.35	RTP	214	PT=ITU-T G.711 PCMA, SSRC=0xBF4AFD37, Seq=23564, Time=39200

    ITU-T G.711 PCMA (8) Frecuencia de muestreo 8K/Hz y usa para comprimir/descomprimir PCMA.
    
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
    0
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
    El primero es el 113
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
    247
 ** ¿A qué se debe el cambio tan brusco del jitter?
    Hay una diferencia de medio segundo entre es paquete y el anterior.?
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
    Ya que la delta es la diferencia entre la llegada de este paquete y la llegada del paquete anterior cuanto mayor
    sea el valor de la Delta mayor sera el valor del Jitter.
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
    Cuando el tiempo que pasa entre el paquete anterior y el actual aumenta tambien lo hace el Jitter.    
    

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
    24.80289 s
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    --NO SE ME ABRE GRAPH NI FLOW--

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
    BYE
 ** ¿En qué trama(s)?
    En las tramas: 924 / 925 / 927 / 933
 ** ¿Por qué crees que se envía varias veces?
    En UDP puede haber perdidas y manda varios por si acaso no le llegan al server.

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    Para borrar del registro al usuario
 ** ¿En qué trama sucede esto?
    En la trama 950
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
    En el Expires con valor 0 para borrarlo de la lista.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
 ** ¿Son diferentes el registro y la descripción de la sesión?


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
 ** ¿Cuál es su periodicidad?
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
